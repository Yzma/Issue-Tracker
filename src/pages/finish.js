import { useRouter } from "next/router"
import Head from "next/head"

import { useSession } from "next-auth/react"

import styles from "@/styles/Home.module.css"

import { Formik, Form, Field } from "formik"
import { NamespaceNameCreationSchema } from "@/lib/yup-schemas"

import axios from "axios"
import "bootstrap/dist/css/bootstrap.min.css"

export default function Home() {
  const router = useRouter()

  const { data: session } = useSession()

  console.log("Session:", session)

  return (
    <>
      <Head>
        <title>Create namespace</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Formik
          initialValues={{
            name: ""
          }}
          validationSchema={NamespaceNameCreationSchema}
          onSubmit={(values, { setSubmitting, setFieldError }) => {
            axios
              .post("/api/user", {
                name: values.name
              })
              .then((response) => {
                console.log("RESPONSE:", response)
                router.push(`/${values.name}`)
              })
              .catch((error) => {
                console.log("ERROR:", error.response.data)
                console.log("ERROR:", error)
              })
              .finally(() => {
                setSubmitting(false)
              })
          }}
        >
          {({ errors, isSubmitting }) => (
            <Form>
              {(errors.name || errors.description || errors.private) && (
                <div className="alert alert-danger" role="alert">
                  <ul>{errors.name && <li>Name: {errors.name}</li>}</ul>
                </div>
              )}

              <label htmlFor="name" className="form-label">
                Username
              </label>
              <Field className="form-control" type="text" name="name" />

              {errors.name && <div>Name errors:{errors.name}</div>}

              <button
                type="submit"
                className="btn btn-success"
                disabled={isSubmitting}
              >
                Submit
              </button>
            </Form>
          )}
        </Formik>
      </main>
    </>
  )
}
