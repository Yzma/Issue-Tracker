import { useRouter } from "next/router"
import Head from "next/head"

import { useSession } from "next-auth/react"

import { Formik, Form, Field } from "formik"
import { NamespaceNameCreationSchema } from "@/lib/yup-schemas"

import axios from "axios"

export default function Home() {
  const router = useRouter()

  const { data: session } = useSession()

  console.log("Session:", session)

  return (
    <>
      <Head>
        <title>Create namespace</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex absolute inset-0  justify-center items-center">
        <div className="relative px-4 sm:px-6 lg:px-8 pb-8  max-w-lg mx-auto">
          <div className="bg-white px-8 pb-6 pt-9 rounded-b shadow-lg">
            <div className="text-center mb-6">
              <h1 className="text-xl leading-snug text-slate-800 font-semibold mb-2">
                Complete Registration
              </h1>
              <div className="text-sm">
                What do you want your username to be?
              </div>
            </div>

            <div>
              <div className="space-y-4">
                <Formik
                  initialValues={{
                    name: ""
                  }}
                  validationSchema={NamespaceNameCreationSchema}
                  validateOnChange={false}
                  validateOnBlur={false}
                  onSubmit={(values, { setSubmitting, setFieldError }) => {
                    axios
                      .post("/api/user", {
                        name: values.name
                      })
                      .then((response) => {
                        console.log("RESPONSE:", response)
                        router.push(`/${values.name}`)
                      })
                      .catch((error) => {
                        console.log("ERROR:", error.response.data)
                        console.log("ERROR:", error)
                      })
                      .finally(() => {
                        setSubmitting(false)
                      })
                  }}
                >
                  {({ errors, isSubmitting, values, setFieldError }) => (
                    <Form onChange={() => setFieldError("name", false)}>
                      {errors.name && (
                        <div className="py-3">
                          <div className="flex w-full px-4 py-2 rounded-sm text-sm border bg-rose-100 border-rose-200 text-rose-600">
                            <div>You must enter a valid username!</div>
                          </div>
                        </div>
                      )}

                      <div>
                        <label className="block text-sm font-medium mb-1">
                          Username
                          <span className="text-rose-500">*</span>
                        </label>
                        <Field
                          className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                          type="text"
                          name="name"
                        />
                      </div>
                      <div className="text-sm pt-4">
                        <p>
                          This will be the name of your account on Issue
                          Tracker.
                        </p>
                        <p>
                          Your URL will be:{" "}
                          {/* {`${window.location.origin}/${values.name}`} */}
                        </p>
                      </div>

                      <div className="mt-6">
                        <div className="mb-4">
                          <button
                            className="btn bg-indigo-500 hover:bg-indigo-600 text-white"
                            type="submit"
                            disabled={isSubmitting}
                          >
                            Finish Registration
                          </button>
                        </div>
                      </div>
                    </Form>
                  )}
                </Formik>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  )
}
