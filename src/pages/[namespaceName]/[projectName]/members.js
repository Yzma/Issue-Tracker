import Head from "next/head"
import Link from "next/link"
import { useRouter } from "next/router"

import * as DropdownMenu from "@radix-ui/react-dropdown-menu"

import { useSession } from "next-auth/react"

import prisma from "@/lib/prisma/prisma"
import BelowNavbar from "@/components/other/BelowNavbar"

export default function MyInvites(props) {
  const { data: session } = useSession()
  const router = useRouter()
  const { namespaceName, projectName } = router.query

  return (
    <>
      <Head>
        <title>{projectName}&apos;s Members</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex h-screen overflow-hidden bg-slate-100">
        <div className="relative flex flex-col flex-1 overflow-y-auto overflow-x-hidden">
          <BelowNavbar
            namespaceName={namespaceName}
            projectName={projectName}
          />

          <main>
            <div className="px-4 sm:px-6 lg:px-8 py-8 w-full max-w-9xl mx-auto">
              <div className="sm:flex sm:justify-between sm:items-center mb-8">
                <div className="mb-4 sm:mb-0">
                  <h1 className="text-2xl md:text-3xl text-slate-800 font-bold">
                    Project Members
                  </h1>
                </div>
              </div>

              <div className="bg-white shadow-lg rounded-sm border border-slate-200 relative">
                <header className="px-5 py-4">
                  <h2 className="font-semibold text-slate-800">
                    {projectName}&apos;s Members (2){" "}
                  </h2>
                </header>

                <div>
                  <div className="overflow-x-auto">
                    <table className="table-auto w-full rounded-xl shadow-lg">
                      <thead className="text-xs font-semibold uppercase text-slate-500 bg-slate-50 border-t border-b border-slate-200">
                        <tr>
                          <th className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                            <div className="font-semibold text-left">#</div>
                          </th>
                          <th className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                            <div className="font-semibold">User</div>
                          </th>
                          <th className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                            <div className="font-semibold">Join Date</div>
                          </th>
                          <th className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                            <div className="font-semibold">Role</div>
                          </th>
                          <th className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                            <span className="sr-only">Menu</span>
                          </th>
                        </tr>
                      </thead>
                      <tbody className="text-sm divide-y divide-slate-200">
                        {props.members.map((member, index) => (
                          <tr key={index}>
                            <td className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                              <div className="text-left">{index + 1}</div>
                            </td>

                            <td className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                              <div className="text-center">
                                <Link
                                  className="text-sky-400 hover:text-sky-700"
                                  href={"/"}
                                >
                                  {member.user.username}
                                </Link>
                                {session &&
                                session.namespace === member.user.username ? (
                                  <span className="inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-green-500 bg-green-100 rounded-full">
                                    You
                                  </span>
                                ) : (
                                  <></>
                                )}
                              </div>
                            </td>

                            <td className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                              <div className="text-center">
                                {member.createdAt}
                              </div>
                            </td>

                            <td className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap">
                              <div className="text-center">{member.role}</div>
                            </td>

                            <td className="px-2 first:pl-5 last:pr-5 py-3 whitespace-nowrap w-px">
                              <DropdownMenu.Root>
                                <DropdownMenu.Trigger asChild>
                                  <svg
                                    className="w-8 h-8 fill-current "
                                    viewBox="0 0 32 32"
                                  >
                                    <circle cx="16" cy="16" r="2" />
                                    <circle cx="10" cy="16" r="2" />
                                    <circle cx="22" cy="16" r="2" />
                                  </svg>
                                </DropdownMenu.Trigger>

                                <DropdownMenu.Portal>
                                  <DropdownMenu.Content
                                    className="DropdownMenuContent"
                                    sideOffset={5}
                                  >
                                    <DropdownMenu.Item className="DropdownMenuItem">
                                      Remove User
                                      <div className="RightSlot"></div>
                                    </DropdownMenu.Item>
                                  </DropdownMenu.Content>
                                </DropdownMenu.Portal>
                              </DropdownMenu.Root>
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </main>
        </div>
      </div>
    </>
  )
}

export async function getServerSideProps(context) {
  const { namespaceName, projectName } = context.query
  const members = await prisma.member.findMany({
    where: {
      project: {
        name: projectName,
        namespace: {
          name: namespaceName
        }
      }
    },
    select: {
      id: true,
      role: true,
      createdAt: true,
      user: {
        select: {
          id: true,
          username: true
        }
      }
    }
  })
  console.log(members)

  const mapped = members.map((e) => {
    return {
      ...e,
      createdAt: e.createdAt.toISOString()
    }
  })

  return {
    props: {
      members: mapped
    }
  }
}
